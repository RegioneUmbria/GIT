<project basedir="." default="init" name="diogenedb">

	<import file="build-user.xml" />

    <target depends="initUser"  name="init">
    	<property name="diogenedb.location" value="${basedir}" />
    	<property name="libdir" value="${diogenedb.location}/WebContent/WEB-INF/lib" />
    	<property name="cvs.root" value=":pserver:makerelease:makerelease@cvs.webred-private.it:/cvs_repos" />
    	<property name="build.compiler" value="modern" />
    	<property name="comp.debug" value="true" />
    	<property name="comp.deprecation" value="false" />
    	<property name="tmp.location" value="${diogenedb.location}/tmp" />	
    	<property name="tmp.Fwebxml.location" value="${diogenedb.location}/tmpWebXml" />	
    	<tstamp>
    	      <format property="oggi" pattern="dd/MM/yyyy hh:mm aa"/>
    	</tstamp>    	
    	<echo message="PROPERTIES :" />
    	<echo message="JavaVersion........${java.version}" />
    	<echo message="javahome...........${java.home}" />
    	<echo message="user...............${user.name}" />
    	<echo message="userhome...........${user.home}" />
    	<echo message="buildcompiler......${build.compiler}" />
    	<echo message="comp.debug.........${comp.debug}" />
    	<echo message="comp.deprecation...${comp.deprecation}" />
    	<echo message="diogenedb.location.${diogenedb.location}" />
    	<echo message="tomcat.location....${tomcat.location}" />
    	<echo message="tmp.location.......${tmp.location}" />
    	<echo message="tmp.webxml.location.......${tmp.webxml.location}" />
        <path id="libs">
            <!--<pathelement location="build/classes"/>-->
            <fileset dir="${tomcat.location}/common/lib/">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${diogenedb.location}/WebContent/WEB-INF/lib">
                <include name="*.jar"/>
            </fileset>
        </path>
    </target>
    <target name="clean">
        <delete failonerror="false" dir="${tmp.location}"/>
	    <delete failonerror="false" file="${diogenedb.location}/diogenedb.war" />
    </target>
    <target depends="init,clean, read.env.properties" name="build.war">


    	<mkdir dir="${tmp.location}"/>
        <mkdir dir="${tmp.webxml.location}"/>
    	<mkdir dir="${tmp.location}/tmpJar"/>

    	<copy file="${diogenedb.location}/WebContent/WEB-INF/web.xml" todir="${tmp.webxml.location}"/>

    	<copy todir="${tmp.location}">
            <fileset dir="${diogenedb.location}/WebContent">
            	<exclude name="WEB-INF/web.xml"/>
                <include name="**/*"/>
            </fileset>        	
        </copy>
    	
    	
    	<replace file="${tmp.location}/WEB-INF/build.xml" token="8080" value="${tomcat.port}"/>
    	<replace file="${tmp.location}/WEB-INF/build.xml" token="diogenedb/services/AdminService" value="${webapp.name}/services/AdminService"/>


    	
    	<mkdir dir="${tmp.location}/WEB-INF/classes"/>
        <copy todir="${tmp.location}/WEB-INF/classes">
            <fileset dir="${diogenedb.location}/JavaSource">
            	<exclude name="CVS/*"/>
                <include name="**/*.xml"/>
            	<include name="**/*.properties"/>
            	<include name="**/*.dtd"/>
            	<include name="**/*.tld"/>
            	<include name="**/*.txt"/>
            </fileset>        	
        </copy>	
    	<javac classpathref="libs"  destdir="${tmp.location}/tmpJar" debug="${comp.debug}" deprecation="${comp.deprecation}">
            <src path="JavaSource"/>
        </javac>

    	
		<java classname="it.webred.utils.JDomModifyXPath" classpathref="libs" fork="true">
			<arg value="${tmp.webxml.location}/web.xml" />
			<arg value="${tmp.webxml.location}/web.xml" />
			<arg value="tag" />
			<arg value="web-app/security-constraint/auth-constraint/role-name" />
			<arg value="${webapp.name}" />
			<arg value="tag" />
			<arg value="web-app/security-role/role-name" />
			<arg value="${webapp.name}" />
			<arg value="tag" />
			<arg value="web-app/display-name" />
			<arg value="${webapp.name}" />
		</java>    	

    	
    	<copy file="${diogenedb.location}/WebContent/WEB-INF/build.xml" todir="${tmp.webxml.location}"/>
 	
		<java classname="it.webred.utils.JDomModifyXPath" classpathref="libs" fork="true">
			<arg value="${tmp.webxml.location}/build.xml" />
			<arg value="${tmp.webxml.location}/build.xml" />
			<arg value="att" />
			<arg value="project/target[@name='axis-deploy']/admin/@port" />
			<arg value="${tomcat.port}" />
		</java>    
				
				
		<xslt basedir="${tmp.location}/WEB-INF/classes" destdir="${tmp.location}/WEB-INF/classes" includes="**/hibernate.cfg.xml" extension=".bak" style="build.xsl">
			<param name="utentedb" expression="${db.user}"/>
			<param name="dbserver" expression="${db.server}"/>
			<param name="dbservice" expression="${db.service}"/>
		</xslt>    	
		<xslt basedir="${tmp.location}/WEB-INF/classes" destdir="${tmp.location}/WEB-INF/classes" includes="**/hibernate.cfg2.xml" extension=".bak" style="build.xsl">
			<param name="utentedb" expression="${db.user.utenti}"/>
			<param name="dbserver" expression="${db.server.utenti}"/>
			<param name="dbservice" expression="${db.service.utenti}"/>
		</xslt>   
    	
    	<move file="${tmp.location}/WEB-INF/classes/hibernate.cfg.bak" tofile="${tmp.location}/WEB-INF/classes/hibernate.cfg.xml" overwrite="true"/>
    	<move file="${tmp.location}/WEB-INF/classes/hibernate.cfg2.bak" tofile="${tmp.location}/WEB-INF/classes/hibernate.cfg2.xml" overwrite="true"/>

    	
    	<jar basedir="${tmp.location}/tmpJar" compress="true" includes="*/**" jarfile="${tmp.location}/WEB-INF/lib/diogenedb.jar" >
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
                <attribute name="Build-Date" value="${oggi}"/>
            </manifest>            
        </jar>
    	<delete dir="${tmp.location}/tmpJar"/>
    	<java classname="it.webred.utils.ReboundProperties" classpathref="libs" fork="true">
    		<arg value="${tmp.location}/WEB-INF/classes/log4j.properties"/>
    		<arg value="${tmp.location}/WEB-INF/classes/log4j.properties"/>
        	<arg value="log4j.appender.nelfile.File=${catalina.home}/logs/${webapp.name}Log.txt"/>  
    		<arg value="log4j.rootLogger=ERROR, nelfile"/>  
        </java>
    	<war destfile="${diogenedb.location}/${webapp.name}.war"  webxml="${tmp.webxml.location}\web.xml">
            <fileset dir="${tmp.location}">
            </fileset>
            <manifest>
                <attribute name="Built-By" value="${user.name}"/>
            </manifest>     
        </war>
    	<delete dir="${tmp.location}"/>
    	<delete dir="${tmp.webxml.location}"/>

    </target>

    <target depends="init" name="take.gestionePermessi.from.cvs">
    	<mkdir dir="${libdir}/.gestionePermessi"/>
    	<cvs command="export -d ${libdir}/.gestionePermessi -r HEAD josso/gestionePermessi/releases/last/gestionePermessi.jar" cvsRoot="${cvs.root}" />
        <delete file="${libdir}/gestionePermessi.jar"/>
        <copy file="${libdir}/.gestionePermessi/gestionePermessi.jar" todir="${libdir}"/>
        <delete dir="${libdir}/.gestionePermessi"/>
    </target>
        	
    <target depends="init" name="take.webredutils.from.cvs">
    	<mkdir dir="${libdir}/.webredutils"/>
    	<cvs command="export -d ${libdir}/.webredutils -r HEAD webredutils/releases/last/webredutils.jar" cvsRoot="${cvs.root}" />
        <delete file="${libdir}/webredutils.jar"/>
        <copy file="${libdir}/.webredutils/webredutils.jar" todir="${libdir}"/>
        <delete dir="${libdir}/.webredutils"/>
    </target>
	
	<!-- Lettura delle informazioni di deploy dal file env.properties oppure dal file properties specifico del cliente -->
	<target name="set.cliente.default" unless="cliente.settato">
		<property name="cliente" value="" />
		<echo message="Non si e' specificato il cliente per il deploy. Si utilizza il file properties di default!!!"/>
	</target>
	<target name="check.env.properties" if="cliente.settato">
		<echo message="Cerco:${basedir}/env${cliente}diogenedb.properties"/>
		<available file="${basedir}/env${cliente}diogenedb.properties" property="isFileAvailable" type="file"/>
	    <fail unless="isFileAvailable" message="Il file env${cliente}diogenedb.properties non esiste!!!"/>
	</target>
	<target name="check.cliente">
	    <condition property="cliente.settato">
	    	<isset property="cliente"/>
	    </condition>
	</target>
	<target name="read.env.properties" depends="check.cliente, set.cliente.default, check.env.properties">    
	    <echo message="Lettura del file : env${cliente}diogenedb.properties"/>
		<property file="env${cliente}diogenedb.properties" prefix="env"/>
		<property name="db.server" value="${env.db.server}"/>
		<property name="db.service" value="${env.db.service}"/>
		<property name="db.user" value="${env.db.user}"/>
		<property name="db.server.utenti" value="${env.db.server.utenti}"/>
		<property name="db.service.utenti" value="${env.db.service.utenti}"/>
		<property name="db.user.utenti" value="${env.db.user.utenti}"/>
		<property name="tomcat.port" value="${env.tomcat.port}"/>
		<property name="webapp.name" value="${env.webapp.name}"/>
		<echo message="tomcat.port=${tomcat.port}"/>
		<echo message="db.server=${db.server}"/>
		<echo message="db.service=${db.service}"/>
		<echo message="db.user=${db.user}"/>
		<echo message="db.server.utenti=${db.server.utenti}"/>
		<echo message="db.service.utenti=${db.service.utenti}"/>
		<echo message="db.user.utenti=${db.user.utenti}"/>
		<echo message="webapp.name=${webapp.name}"/>
	</target> 
	
</project>
