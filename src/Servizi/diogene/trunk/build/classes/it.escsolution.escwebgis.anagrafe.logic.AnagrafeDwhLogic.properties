sql.SELECT_LISTA = SELECT * FROM (SELECT ROWNUM AS n, cognome, nome, cod_anagrafe, codice_fiscale,data_nascita, codice_nazionale, id_orig , ID_EXT, ID, descrizione_via, civico FROM (SELECT DISTINCT DECODE(sit_d_persona.ID_ORIG,NULL, '-',sit_d_persona.ID_ORIG) AS cod_anagrafe,DECODE (sit_d_persona.cognome,NULL, '-',sit_d_persona.cognome) AS cognome,DECODE (sit_d_persona.nome,NULL, '-',sit_d_persona.nome) AS nome,DECODE(sit_d_persona.CODFISC,NULL, '-',sit_d_persona.CODFISC) AS codice_fiscale,sit_d_persona.id_orig AS ID_ORIG, sit_d_persona.id_EXT AS ID_EXT, sit_d_persona.ID AS ID, NVL(TO_CHAR (sit_d_persona.DATA_NASCITA  , 'dd/mm/yyyy'),'-') AS data_nascita,CODENT AS codice_nazionale, sit_d_persona.INDIRIZZO_EMI, decode(viasedime, null, '', '', '', viasedime || ' ') || descrizione_via as descrizione_via, civ_composto civico FROM SIT_D_PERSONA, persona_civici_v, SIT_D_PERS_FAM, SIT_D_FAMIGLIA WHERE 1\= ? AND SIT_D_PERSONA.DT_FINE_VAL IS NULL AND PERSONA_CIVICI_V.DT_FINE_VAL IS NULL AND SIT_D_PERS_FAM.DT_FINE_VAL IS NULL AND SIT_D_FAMIGLIA.DT_FINE_VAL IS NULL AND SIT_D_PERSONA.ID_EXT\=PERSONA_CIVICI_V.ID_EXT_PERSONA(+) AND SIT_D_PERSONA.ID_EXT \= SIT_D_PERS_FAM.ID_EXT_D_PERSONA(+) AND SIT_D_PERS_FAM.ID_EXT_D_FAMIGLIA \= SIT_D_FAMIGLIA.ID_EXT(+)
sql.SELECT_LISTA_ATT=SELECT * FROM (SELECT ROWNUM AS n, cognome, nome, cod_anagrafe, codice_fiscale,data_nascita, codice_nazionale, id_orig , ID_EXT, ID, id_fam FROM (SELECT   ROWNUM AS n,DECODE(sit_d_persona.ID_ORIG,NULL, '-',sit_d_persona.ID_ORIG) AS cod_anagrafe,DECODE (sit_d_persona.cognome,NULL, '-',sit_d_persona.cognome) AS cognome,DECODE (sit_d_persona.nome,NULL, '-',sit_d_persona.nome) AS nome,DECODE(sit_d_persona.CODFISC,NULL, '-',sit_d_persona.CODFISC) AS codice_fiscale,sit_d_persona.id_orig AS ID_ORIG, sit_d_persona.id_EXT AS ID_EXT, sit_d_pers_fam.id_ext_d_famiglia as id_fam, sit_d_persona.ID AS ID, NVL(TO_CHAR (sit_d_persona.DATA_NASCITA  , 'dd/mm/yyyy'),'-') AS data_nascita,CODENT AS codice_nazionale, sit_d_persona.INDIRIZZO_EMI FROM SIT_D_PERSONA left join sit_d_pers_fam on sit_d_persona.id_ext \= sit_d_pers_fam.id_ext_d_persona, sit_ente WHERE 1 \= ? AND sit_d_persona.posiz_ana IN ('A','ISCRITTO NELL''A.P.R.') AND SIT_D_PERSONA.DT_FINE_VAL IS NULL AND SIT_D_PERS_FAM.DT_FINE_VAL IS NULL
                     
sql.SELECT_COUNT_LISTA = SELECT count(*) as conteggio FROM (SELECT ROWNUM AS n, cognome, nome, cod_anagrafe, codice_fiscale,data_nascita, codice_nazionale, id_orig , ID_EXT, ID FROM (SELECT DISTINCT DECODE(sit_d_persona.ID_ORIG,NULL, '-',sit_d_persona.ID_ORIG) AS cod_anagrafe,DECODE (sit_d_persona.cognome,NULL, '-',sit_d_persona.cognome) AS cognome,DECODE (sit_d_persona.nome,NULL, '-',sit_d_persona.nome) AS nome,DECODE(sit_d_persona.CODFISC,NULL, '-',sit_d_persona.CODFISC) AS codice_fiscale,sit_d_persona.id_orig AS ID_ORIG, sit_d_persona.id_EXT AS ID_EXT, sit_d_persona.ID AS ID, NVL(TO_CHAR (sit_d_persona.DATA_NASCITA  , 'dd/mm/yyyy'),'-') AS data_nascita,CODENT AS codice_nazionale, sit_d_persona.INDIRIZZO_EMI FROM SIT_D_PERSONA, persona_civici_v, SIT_D_PERS_FAM, SIT_D_FAMIGLIA WHERE 1\= ? AND SIT_D_PERSONA.DT_FINE_VAL IS NULL AND PERSONA_CIVICI_V.DT_FINE_VAL IS NULL AND SIT_D_PERS_FAM.DT_FINE_VAL IS NULL AND SIT_D_FAMIGLIA.DT_FINE_VAL IS NULL AND PERSONA_CIVICI_V.ID_EXT_PERSONA \= SIT_D_PERSONA.ID_EXT AND SIT_D_PERSONA.ID_EXT \= SIT_D_PERS_FAM.ID_EXT_D_PERSONA(+) AND SIT_D_PERS_FAM.ID_EXT_D_FAMIGLIA \= SIT_D_FAMIGLIA.ID_EXT(+)
sql.SELECT_COUNT_LISTA_ATT=select count(*) as conteggio  from sit_d_persona left join sit_d_pers_fam on sit_d_persona.id_ext \= sit_d_pers_fam.id_ext_d_persona,  sit_ente WHERE 1\=? AND sit_d_persona.dt_fine_val IS NULL AND sit_d_pers_fam.dt_fine_val IS NULL AND sit_d_persona.posiz_ana IN ('A','ISCRITTO NELL''A.P.R.')
						 
sql.SELECT_DETTAGLIO = SELECT DISTINCT sit_d_persona.ID_ORIG AS cod_anagrafe, sit_d_persona.ID_EXT AS ID_EXT, sit_d_persona.ID ID , DECODE (sit_d_persona.cognome, NULL, '-', sit_d_persona.cognome ) AS cognome, DECODE (sit_d_persona.nome, NULL, '-', sit_d_persona.nome) AS nome, DECODE (sit_comune.DESCRIZIONE, NULL, '-', sit_comune.DESCRIZIONE ) AS comuni_nascita, DECODE (sit_d_persona.CODFISC, NULL, '-', sit_d_persona.CODFISC ) AS codice_fiscale, NVL (TO_CHAR (sit_d_persona.data_nascita , 'dd/mm/yyyy'), '-' ) AS data_nascita, DECODE (sit_d_persona.sesso, NULL, '-', sit_d_persona.sesso) AS sesso, '-' AS tipo_soggetto, DECODE (sit_d_staciv.descrizione, NULL, '-', sit_d_staciv.descrizione) AS desc_stato_civile, SIT_D_VIA.id_orig codice_via, trim(nvl(SIT_D_VIA.VIASEDIME,'')) viasedime, trim(nvl(SIT_D_VIA.DESCRIZIONE,'')) viadescrizione, \
(SELECT MAX(PERSONA_CIVICI_V.civ_composto) FROM PERSONA_CIVICI_V WHERE PERSONA_CIVICI_V.DT_FINE_VAL IS NULL AND SIT_D_PERSONA.ID_EXT\=PERSONA_CIVICI_V.ID_EXT_PERSONA) AS civico, \
DECODE (SIT_D_PERS_FAM.ID_EXT_D_FAMIGLIA, NULL, '-', SIT_D_PERS_FAM.ID_EXT_D_FAMIGLIA ) AS FK_FAMIGLIE, DECODE (sit_STATO.DESCRIZIONE, NULL, '-', sit_STATO.DESCRIZIONE ) AS cittadinanza, CODENT AS codice_nazionale, POSIZ_ANA AS POSIZ_ANA, COM_MOR.DESCRIZIONE AS COMUNE_MORTE, TO_CHAR(DATA_MOR,'DD/MM/YYYY') AS DATA_MORTE, COM_EMI.DESCRIZIONE AS COMUNE_EMIGRAZIONE, TO_CHAR(DATA_EMI,'DD/MM/YYYY') AS DATA_EMIGRAZIONE, COM_IMM.DESCRIZIONE AS COMUNE_IMMIGRAZIONE, TO_CHAR(DATA_IMM,'DD/MM/YYYY') AS DATA_IMMIGRAZIONE, SIT_D_CIVICO.id as CIV_ID, SIT_D_VIA.ID AS ID_VIA, sit_d_persona.INDIRIZZO_EMI \
FROM sit_d_persona, sit_comune, SIT_D_PERS_FAM, SIT_STATO , SIT_D_PERSONA_CIVICO , SIT_D_CIVICO, SIT_D_VIA, sit_ente, TABLE (XMLSEQUENCE (EXTRACT (nvl(civico_composto,'<civicocomposto/>'), 'civicocomposto'))) tab_civicocomposto, SIT_COMUNE COM_MOR, SIT_COMUNE COM_IMM , SIT_COMUNE COM_EMI, SIT_D_STACIV \
WHERE sit_comune.id_ext (+) \= sit_d_persona.ID_EXT_COMUNE_NASCITA and sit_comune.DT_FINE_VAL is null AND SIT_D_PERSONA.ID_EXT \= SIT_D_PERS_FAM.ID_EXT_D_PERSONA (+) AND SIT_D_PERS_FAM.DT_FINE_VAL IS NULL and sit_STATO.id_ext (+) \= sit_d_persona.ID_EXT_STATO  and sit_STATO.DT_FINE_VAL is null AND SIT_D_PERSONA.ID_EXT \= SIT_D_PERSONA_CIVICO.ID_EXT_D_PERSONA (+) AND SIT_D_PERSONA_CIVICO.DT_FINE_VAL IS NULL AND SIT_D_PERSONA_CIVICO.ID_EXT_D_CIVICO \= SIT_D_CIVICO.ID_EXT (+) AND SIT_D_CIVICO.DT_FINE_VAL IS NULL AND SIT_D_CIVICO.ID_EXT_D_VIA \= SIT_D_VIA.ID_EXT (+) AND SIT_D_PERSONA.STATO_CIVILE \= SIT_D_STACIV.ID_ORIG (+) AND SIT_D_VIA.DT_FINE_VAL IS NULL AND COM_MOR.ID_EXT (+)  \= SIT_D_PERSONA.ID_EXT_COMUNE_MOR AND COM_MOR.DT_FINE_VAL IS NULL AND COM_EMI.ID_EXT (+)  \= SIT_D_PERSONA.ID_EXT_COMUNE_EMI AND COM_EMI.DT_FINE_VAL IS NULL AND COM_IMM.ID_EXT (+) \= SIT_D_PERSONA.ID_EXT_COMUNE_IMM AND COM_IMM.DT_FINE_VAL IS NULL


sql.SELECT_DETTAGLIO_COND_ID = AND SIT_D_PERSONA.ID = ?

sql.VIA_DA_SITIDSTR = select a.id_orig , sitivie.prefisso VIASEDIME, sitivie.nome VIADES from sit_ente,  sit_d_via a, SITIDSTR sitivie where a.id_orig \= sitivie.numero(+) and a.id_orig \= ? and a.dt_fine_val is null
sql.SELECT_ID_STORICI = select ID, DT_INIZIO_VAL, DT_FINE_VAL from sit_d_persona p where exists  ( select id_ext from sit_d_persona pp where id \= ? and p.id_ext \= pp.id_ext ) order by dt_fine_val nulls first

sql.STORICO_INDIRIZZI = SELECT DISTINCT \
       					SIT_D_PERSONA.ID ID, \
					    SIT_D_VIA.ID_ORIG CODICE_VIA, \
					    TRIM (NVL (SIT_D_VIA.VIASEDIME, '')) VIASEDIME, \
					    TRIM (NVL (SIT_D_VIA.DESCRIZIONE, '')) VIADESCRIZIONE, \
						CASE \
             			WHEN TRIM (LEADING 0 FROM CV.CIV_LIV1) IS NOT NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV2) IS NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV3) IS NULL \
             			THEN \
                		TRIM (LEADING 0 FROM CV.CIV_LIV1) \
             			WHEN TRIM (LEADING 0 FROM CV.CIV_LIV1) IS NOT NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV2) IS NOT NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV3) IS NULL \
             			THEN \
                   		TRIM (LEADING 0 FROM CV.CIV_LIV1) \
		                || '/' \
		                || TRIM (LEADING 0 FROM CV.CIV_LIV2) \
             			WHEN TRIM (LEADING 0 FROM CV.CIV_LIV1) IS NOT NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV2) IS NOT NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV3) IS NOT NULL \
             			THEN \
                   		TRIM (LEADING 0 FROM CV.CIV_LIV1) \
                		|| '/' \
                		|| TRIM (LEADING 0 FROM CV.CIV_LIV2) \
 			            || '/' \
                		|| TRIM (LEADING 0 FROM CV.CIV_LIV3) \
            			WHEN TRIM (LEADING 0 FROM CV.CIV_LIV1) IS NOT NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV2) IS NULL \
                  		AND TRIM (LEADING 0 FROM CV.CIV_LIV3) IS NOT NULL \
             			THEN \
                   		TRIM (LEADING 0 FROM CV.CIV_LIV1) \
                		|| '/' \
                		|| TRIM (LEADING 0 FROM CV.CIV_LIV3) \
          				END \
						AS CIVICO, \
       					NVL(SIT_D_PERSONA_CIVICO.DT_INIZIO_DATO, NVL(SIT_D_PERSONA_CIVICO.DT_INIZIO_VAL, TO_DATE('01/01/1000', 'DD/MM/YYYY'))) AS INIZIO_RES, \
       					SIT_D_PERSONA_CIVICO.DT_FINE_DATO AS FINE_RES \
  						FROM SIT_D_PERSONA, \
       					SIT_D_PERSONA_CIVICO, \
       					SIT_D_CIVICO, \
      					SIT_D_VIA, \
						SIT_D_CIVICO_VIA_V CV \
 						WHERE SIT_D_PERSONA.ID_EXT \= SIT_D_PERSONA_CIVICO.ID_EXT_D_PERSONA(+) \
       					AND SIT_D_PERSONA_CIVICO.ID_EXT_D_CIVICO \= SIT_D_CIVICO.ID_EXT(+) \
       					AND SIT_D_PERSONA_CIVICO.ID_EXT_D_CIVICO \= CV.ID_EXT \
						AND SIT_D_CIVICO.DT_FINE_VAL IS NULL \
       					AND SIT_D_CIVICO.ID_EXT_D_VIA \= SIT_D_VIA.ID_EXT(+) \
       					AND SIT_D_VIA.DT_FINE_VAL IS NULL \
       					AND SIT_D_VIA.ID_ORIG <> 0 \
       					AND SIT_D_PERSONA.ID \= ? \
       					ORDER BY NVL(SIT_D_PERSONA_CIVICO.DT_INIZIO_DATO, NVL(SIT_D_PERSONA_CIVICO.DT_INIZIO_VAL, TO_DATE('01/01/1000', 'DD/MM/YYYY'))) DESC

sql.SELECT_DT_AGG_STORICO_FAM = SELECT MAX(DATE_START) AS MAX_DATE_START \
								FROM R_COMMAND_LAUNCH CL, R_COMMAND C \
								WHERE C.ID \= CL.FK_COMMAND \
								AND CL.BELFIORE \= ? \
								AND C.COD_COMMAND \= ? \
								AND DATE_END IS NOT NULL \
								AND NOT EXISTS (SELECT 1 FROM R_COMMAND_ACK A \
								WHERE A.FK_COMMAND \= C.ID \
								AND A.FK_COMMAND_LAUNCH \= CL.ID \
								AND A.ACK_NAME \= 'ErrorAck')
								
sql.SELECT_STORICO_FAM = SELECT * FROM ( SELECT DISTINCT F.ID_ORIG, CASE WHEN NVL(S.DATA_INI_RIF, TO_DATE('01/01/1000', 'DD/MM/YYYY')) \= NVL(S.DATA_NASCITA, TO_DATE('01/01/1000', 'DD/MM/YYYY')) AND NOT EXISTS (SELECT 1 FROM SIT_D_PERS_FAM PF WHERE PF.ID_EXT_D_FAMIGLIA \= S.ID_EXT_D_FAMIGLIA AND PF.ID_EXT_D_PERSONA \= S.ID_EXT_D_PERSONA AND NVL(S.DATA_INI_RIF, TO_DATE('01/01/1000', 'DD/MM/YYYY')) >\= NVL(PF.DT_INIZIO_DATO, NVL(PF.DT_INIZIO_VAL, TO_DATE('01/01/1000', 'DD/MM/YYYY')))) THEN TO_DATE('01/01/1000', 'DD/MM/YYYY') ELSE S.DATA_INI_RIF END AS DATA_INI_RIF, S.DATA_INI_RIF AS DATA_INI_RIF_ORIG, S.DATA_FIN_RIF, S.ID_EXT_D_PERSONA, PC.DT_INIZIO_DATO AS DATA_INI_CIV, NVL(PC.DT_FINE_DATO, (SELECT MIN(PC1.DT_INIZIO_DATO) FROM SIT_D_PERSONA_CIVICO PC1 WHERE PC1.ID_EXT_D_PERSONA \= PC.ID_EXT_D_PERSONA AND PC1.DT_INIZIO_DATO > PC.DT_INIZIO_DATO)) AS DATA_FIN_CIV, LTRIM(RTRIM(V.VIASEDIME || ' ' || V.DESCRIZIONE)) DESCR_VIA, LTRIM(RTRIM(TRIM (LEADING 0 FROM CXML.NUMERO) || ' ' || TRIM (LEADING 0 FROM CXML.BARRATO) || ' ' || TRIM (LEADING 0 FROM CXML.SUBBARRATO))) NUM_CIV FROM SIT_D_FAM_STORICO S, SIT_D_FAMIGLIA F, SIT_D_PERSONA_CIVICO PC, SIT_D_CIVICO C, SIT_D_VIA V, (SELECT ID_EXT, DT_FINE_VAL, EXTRACT (CIVICO_COMPOSTO, '/civicocomposto/att[@tipo\="numero"]/@valore').GETSTRINGVAL() NUMERO, EXTRACT (CIVICO_COMPOSTO, '/civicocomposto/att[@tipo\="barrato"]/@valore').GETSTRINGVAL() BARRATO, EXTRACT (CIVICO_COMPOSTO, '/civicocomposto/att[@tipo\="subbarrato"]/@valore').GETSTRINGVAL() SUBBARRATO FROM SIT_D_CIVICO) CXML WHERE S.ID_EXT_D_FAMIGLIA \= F.ID_EXT AND S.ID_EXT_D_PERSONA \= PC.ID_EXT_D_PERSONA AND C.ID_EXT \= PC.ID_EXT_D_CIVICO AND C.ID_EXT_D_VIA \= V.ID_EXT (+) AND C.DT_FINE_VAL IS NULL AND V.DT_FINE_VAL IS NULL AND C.ID_EXT \= CXML.ID_EXT (+) AND CXML.DT_FINE_VAL IS NULL AND C.ID_EXT_D_VIA <> '0    1' AND S.ID_EXT_D_PERSONA \= ? ORDER BY DATA_INI_RIF DESC NULLS FIRST, DATA_INI_CIV DESC NULLS FIRST ) TAB WHERE (TAB.DATA_INI_CIV IS NOT NULL OR TAB.DATA_FIN_CIV IS NOT NULL OR NOT EXISTS (SELECT 1 FROM SIT_D_PERSONA_CIVICO PC1 WHERE PC1.ID_EXT_D_PERSONA \= TAB.ID_EXT_D_PERSONA AND (PC1.DT_INIZIO_DATO IS NOT NULL OR PC1.DT_FINE_DATO IS NOT NULL))) AND NVL(TAB.DATA_INI_RIF, TO_DATE('01/01/1000', 'DD/MM/YYYY')) < NVL(TAB.DATA_FIN_CIV, TO_DATE('31/12/9999', 'DD/MM/YYYY')) AND NVL(TAB.DATA_FIN_RIF, TO_DATE('31/12/9999', 'DD/MM/YYYY')) > NVL(TAB.DATA_INI_CIV, TO_DATE('01/01/1000', 'DD/MM/YYYY'))
	
sql.SELECT_STORICO_FAM_PERSONE = SELECT DISTINCT P.ID, P.COGNOME, P.NOME, P.DATA_NASCITA, PF.RELAZ_PAR, S.DATA_INI_RIF, S.DATA_FIN_RIF \
							FROM SIT_D_PERSONA P, SIT_D_FAMIGLIA F, SIT_D_PERS_FAM PF, SIT_D_FAM_STORICO S \
							WHERE P.ID_EXT \= S.ID_EXT_D_PERSONA \
							AND F.ID_EXT \= S.ID_EXT_D_FAMIGLIA \
							AND PF.ID_EXT_D_PERSONA \= P.ID_EXT \
							AND F.ID_ORIG \= ? \
							AND NVL(S.DATA_INI_RIF, TO_DATE ('01-01-1000', 'DD-MM-YYYY')) <\= ? \
							AND NVL(S.DATA_FIN_RIF, TO_DATE ('31-12-9999', 'DD-MM-YYYY')) >\= ? \
							AND NVL(P.DT_FINE_VAL, TO_DATE ('31-12-9999', 'DD-MM-YYYY')) \= (SELECT MAX(NVL(P1.DT_FINE_VAL, TO_DATE ('31-12-9999', 'DD-MM-YYYY'))) \
                			FROM SIT_D_PERSONA P1, SIT_D_FAMIGLIA F1, SIT_D_PERS_FAM PF1, SIT_D_FAM_STORICO S1 \
                			WHERE P1.ID_EXT \= S1.ID_EXT_D_PERSONA \
                			AND F1.ID_EXT \= S1.ID_EXT_D_FAMIGLIA \
                			AND PF1.ID_EXT_D_PERSONA \= P1.ID_EXT \
                			AND F1.ID_ORIG \= ? \
                			AND NVL(S1.DATA_INI_RIF, TO_DATE ('01-01-1000', 'DD-MM-YYYY')) <\= ? \
                			AND NVL(S1.DATA_FIN_RIF, TO_DATE ('31-12-9999', 'DD-MM-YYYY')) >\= ? \
                			AND P.ID_EXT \= P1.ID_EXT \
                			) \
                			AND NVL(PF.DT_FINE_VAL, TO_DATE ('31-12-9999', 'DD-MM-YYYY')) \= (SELECT MAX(NVL(PF1.DT_FINE_VAL, TO_DATE ('31-12-9999', 'DD-MM-YYYY'))) \
                			FROM SIT_D_PERSONA P1, SIT_D_FAMIGLIA F1, SIT_D_PERS_FAM PF1, SIT_D_FAM_STORICO S1 \
                			WHERE P1.ID_EXT \= S1.ID_EXT_D_PERSONA \
                			AND F1.ID_EXT \= S1.ID_EXT_D_FAMIGLIA \
                			AND PF1.ID_EXT_D_PERSONA \= P1.ID_EXT \
                			AND F1.ID_ORIG \= ? \
                			AND NVL(S1.DATA_INI_RIF, TO_DATE ('01-01-1000', 'DD-MM-YYYY')) <\= ? \
                			AND NVL(S1.DATA_FIN_RIF, TO_DATE ('31-12-9999', 'DD-MM-YYYY')) >\= ? \
                			AND P.ID_EXT \= P1.ID_EXT \
                			) \
							ORDER BY P.COGNOME, P.NOME

						 